# -*- coding: utf-8 -*-
import config
import telebot
from telebot import types
import requests

bot = telebot.TeleBot(config.token)

'''
def sender_verify(message_chat_id):
    if message_chat_id == int(config.sender_id):
        sender_name = config.sender_name
        print("–ü—Ä–æ–≤–µ—Ä–∫–∞ 1")
        pass
    elif message_chat_id == int(config.sender_id_owner):
        sender_name = config.sender_name_owner
        print("–ü—Ä–æ–≤–µ—Ä–∫–∞ 2")
        pass
    else:
        bot.send_message(message_chat_id, f"*{message.chat.username}* —è —Ç–µ–±—è –Ω–µ –∑–Ω–∞—é ", parse_mode = 'Markdown')
        print("–ü—Ä–æ–≤–µ—Ä–∫—É –Ω–µ –ø—Ä–æ—à—ë–ª")
'''

@bot.message_handler(commands=["start"])
def start(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é. \n\n –û—Ç–ø—Ä–∞–≤—å—Ç–µ /help –¥–ª—è –ø–æ–¥—Å–∫–∞–∑–∫–∏.')

@bot.message_handler(commands=["help"])
def helps(message):
    bot.send_message(message.chat.id, '–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è —É—á–∞—Å—Ç–Ω–∏–∫–∞–º —à–∫–æ–ª—å–Ω–æ–≥–æ —á–∞—Ç–∞')

#–£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(commands=["del"])
def delete(message):
    if  message.reply_to_message is not None:
        bot.delete_message(message.chat.id, message.reply_to_message.id)
        #–ø–æ–¥—Ç–∏—Ä–∞–µ–º –∑–∞ —Å–æ–±–æ–π
        bot.delete_message(message.chat.id, message.message_id)

@bot.message_handler(commands=["—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ"])
@bot.message_handler(regexp="^—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ$")
def send_rasp(message):
    bot.send_photo(config.chat, open('raspisanie.jpg', 'rb'))

@bot.message_handler(commands=["–ø–æ–≥–æ–¥–∞"])
@bot.message_handler(regexp="^–ø–æ–≥–æ–¥–∞$")
def send_weather(message):
    response = requests.get('http://pogoda.orsk.ru/')
    temp_orsk = response.text.split('\n')[104].strip()
    bot.send_message(message.chat.id, f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ –û—Ä—Å–∫–µ: {temp_orsk}", parse_mode = 'Markdown')

#–ü–µ—Ä–µ—Å—ã–ª–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ —Ä–µ–ø–ª–∞—é —É—á–∏—Ç–µ–ª—é
@bot.message_handler(func=lambda message: message.reply_to_message is not None)
def reply(message):
    if message.reply_to_message.from_user.username == "Mak_School_One_Bot":
        bot.forward_message(config.sender_id, config.chat, message.message_id)
    else:
        pass

@bot.message_handler(content_types=["text"])
def send_messages(message):
    if int(message.chat.id) == int(config.chat):
        try:
            chatId=message.text.split(': ')[0]
            text=message.text.split(': ')[1]
            bot.send_message(chatId, text)
        except:
            pass
    else:
        # –ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–µ —Ç–µ–º —á–µ–ª–æ–≤–µ–∫–æ–º - –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –µ–≥–æ –Ω–∏–∫
        if message.chat.id == int(config.sender_id):
            sender_name = config.sender_name
        else:
            sender_name = str(message.chat.username)

        bot.send_message(config.chat, f"<b>{sender_name}</b>: {message.text}", parse_mode = 'html')
        bot.send_message(message.chat.id, f"*{message.chat.username}* –∏–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫–∞ üëç", parse_mode = 'Markdown')

@bot.message_handler(content_types=["photo"])
def send_photo(message):

    if int(message.chat.id) == int(config.chat):
        try:
            chatId=message.text.split(': ')[0]
            text=message.text.split(': ')[1]
            bot.send_message(chatId, text)
        except:
            pass
    else:
        # –ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–µ —Ç–µ–º —á–µ–ª–æ–≤–µ–∫–æ–º - –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –µ–≥–æ –Ω–∏–∫
        if message.chat.id == int(config.sender_id):
            sender_name = config.sender_name
        else:
            sender_name = str(message.chat.username)

        photo = message.photo[-1].file_id

        if message.caption is None:
            message.caption = ""

        bot.send_photo(config.chat, photo, f"<b>{sender_name}</b>: {message.caption}", parse_mode='html')
        bot.send_message(message.chat.id, f"*{message.chat.username}*, —Ñ–æ—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.", parse_mode = 'Markdown')


@bot.message_handler(content_types=["document"])
def send_doc(message):

    if int(message.chat.id) == int(config.chat):
        try:
            chatId=message.text.split(': ')[0]
            text=message.text.split(': ')[1]
            bot.send_message(chatId, text)
        except:
            pass
    else:
        # –ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–µ —Ç–µ–º —á–µ–ª–æ–≤–µ–∫–æ–º - –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –µ–≥–æ –Ω–∏–∫
        if message.chat.id == int(config.sender_id):
            sender_name = config.sender_name
        else:
            sender_name = str(message.chat.username)
 
        bot.forward_message(config.chat, message.chat.id, message.message_id) 
        bot.send_message(message.chat.id, "–ü–µ—Ä–µ—Å–ª–∞–ª –¥–æ–∫—É–º–µ–Ω—Ç.")



if __name__ == '__main__':
    bot.polling(none_stop = True)
